//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ratep
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Practik1282Entities : DbContext
    {
        public Practik1282Entities()
            : base("name=Practik1282Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Card_work> Card_work { get; set; }
        public virtual DbSet<Consumer> Consumer { get; set; }
        public virtual DbSet<Employees> Employees { get; set; }
        public virtual DbSet<Material> Material { get; set; }
        public virtual DbSet<Material_card> Material_card { get; set; }
        public virtual DbSet<Nomencloture> Nomencloture { get; set; }
        public virtual DbSet<OKEI> OKEI { get; set; }
        public virtual DbSet<Operation> Operation { get; set; }
        public virtual DbSet<Passport_data> Passport_data { get; set; }
        public virtual DbSet<Post> Post { get; set; }
        public virtual DbSet<Profile> Profile { get; set; }
        public virtual DbSet<Provider> Provider { get; set; }
        public virtual DbSet<Rationing_groups> Rationing_groups { get; set; }
        public virtual DbSet<Stamp> Stamp { get; set; }
        public virtual DbSet<Structure> Structure { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<Work_piece> Work_piece { get; set; }
        public virtual DbSet<Workshop> Workshop { get; set; }
    
        [DbFunction("Practik1282Entities", "BuildProcess")]
        public virtual IQueryable<BuildProcess_Result> BuildProcess(Nullable<int> nomenclotureID)
        {
            var nomenclotureIDParameter = nomenclotureID.HasValue ?
                new ObjectParameter("NomenclotureID", nomenclotureID) :
                new ObjectParameter("NomenclotureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BuildProcess_Result>("[Practik1282Entities].[BuildProcess](@NomenclotureID)", nomenclotureIDParameter);
        }
    
        [DbFunction("Practik1282Entities", "FA_Sum_Time_Spent")]
        public virtual IQueryable<FA_Sum_Time_Spent_Result> FA_Sum_Time_Spent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FA_Sum_Time_Spent_Result>("[Practik1282Entities].[FA_Sum_Time_Spent]()");
        }
    
        [DbFunction("Practik1282Entities", "FA_Sum_Time_Spent_Product")]
        public virtual IQueryable<FA_Sum_Time_Spent_Product_Result> FA_Sum_Time_Spent_Product(string product)
        {
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FA_Sum_Time_Spent_Product_Result>("[Practik1282Entities].[FA_Sum_Time_Spent_Product](@product)", productParameter);
        }
    
        [DbFunction("Practik1282Entities", "GetFullConstructionData")]
        public virtual IQueryable<GetFullConstructionData_Result> GetFullConstructionData(Nullable<int> num_product, Nullable<int> num_product2, Nullable<int> quantity)
        {
            var num_productParameter = num_product.HasValue ?
                new ObjectParameter("Num_product", num_product) :
                new ObjectParameter("Num_product", typeof(int));
    
            var num_product2Parameter = num_product2.HasValue ?
                new ObjectParameter("Num_product2", num_product2) :
                new ObjectParameter("Num_product2", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetFullConstructionData_Result>("[Practik1282Entities].[GetFullConstructionData](@Num_product, @Num_product2, @Quantity)", num_productParameter, num_product2Parameter, quantityParameter);
        }
    
        public virtual int DeleteMaterial(Nullable<int> numMaterial)
        {
            var numMaterialParameter = numMaterial.HasValue ?
                new ObjectParameter("NumMaterial", numMaterial) :
                new ObjectParameter("NumMaterial", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMaterial", numMaterialParameter);
        }
    
        public virtual int DeleteMaterial_card(Nullable<int> numCard)
        {
            var numCardParameter = numCard.HasValue ?
                new ObjectParameter("NumCard", numCard) :
                new ObjectParameter("NumCard", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMaterial_card", numCardParameter);
        }
    
        public virtual int DT_Card_work(Nullable<int> num_product)
        {
            var num_productParameter = num_product.HasValue ?
                new ObjectParameter("Num_product", num_product) :
                new ObjectParameter("Num_product", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DT_Card_work", num_productParameter);
        }
    
        public virtual int DT_Employees(Nullable<int> code_empl)
        {
            var code_emplParameter = code_empl.HasValue ?
                new ObjectParameter("Code_empl", code_empl) :
                new ObjectParameter("Code_empl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DT_Employees", code_emplParameter);
        }
    
        public virtual int DT_Material(Nullable<int> num_material)
        {
            var num_materialParameter = num_material.HasValue ?
                new ObjectParameter("Num_material", num_material) :
                new ObjectParameter("Num_material", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DT_Material", num_materialParameter);
        }
    
        public virtual int DT_Nomencloture(Nullable<int> num_product)
        {
            var num_productParameter = num_product.HasValue ?
                new ObjectParameter("Num_product", num_product) :
                new ObjectParameter("Num_product", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DT_Nomencloture", num_productParameter);
        }
    
        public virtual int DT_Operation(Nullable<int> num_operation)
        {
            var num_operationParameter = num_operation.HasValue ?
                new ObjectParameter("Num_operation", num_operation) :
                new ObjectParameter("Num_operation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DT_Operation", num_operationParameter);
        }
    
        public virtual int DT_Passport_data(string serial, string number)
        {
            var serialParameter = serial != null ?
                new ObjectParameter("Serial", serial) :
                new ObjectParameter("Serial", typeof(string));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DT_Passport_data", serialParameter, numberParameter);
        }
    
        public virtual int DT_Post(Nullable<int> code_post)
        {
            var code_postParameter = code_post.HasValue ?
                new ObjectParameter("Code_post", code_post) :
                new ObjectParameter("Code_post", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DT_Post", code_postParameter);
        }
    
        public virtual int DT_Structure(Nullable<int> num_product_where, Nullable<int> num_product_what)
        {
            var num_product_whereParameter = num_product_where.HasValue ?
                new ObjectParameter("Num_product_where", num_product_where) :
                new ObjectParameter("Num_product_where", typeof(int));
    
            var num_product_whatParameter = num_product_what.HasValue ?
                new ObjectParameter("Num_product_what", num_product_what) :
                new ObjectParameter("Num_product_what", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DT_Structure", num_product_whereParameter, num_product_whatParameter);
        }
    
        public virtual int DT_Unit(Nullable<int> code_unit)
        {
            var code_unitParameter = code_unit.HasValue ?
                new ObjectParameter("Code_unit", code_unit) :
                new ObjectParameter("Code_unit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DT_Unit", code_unitParameter);
        }
    
        public virtual ObjectResult<GetEmployees_Result> GetEmployees(Nullable<int> postID)
        {
            var postIDParameter = postID.HasValue ?
                new ObjectParameter("postID", postID) :
                new ObjectParameter("postID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployees_Result>("GetEmployees", postIDParameter);
        }
    
        public virtual int InsertMaterial(string nameMaterial, Nullable<int> numUnit, Nullable<int> price)
        {
            var nameMaterialParameter = nameMaterial != null ?
                new ObjectParameter("NameMaterial", nameMaterial) :
                new ObjectParameter("NameMaterial", typeof(string));
    
            var numUnitParameter = numUnit.HasValue ?
                new ObjectParameter("NumUnit", numUnit) :
                new ObjectParameter("NumUnit", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMaterial", nameMaterialParameter, numUnitParameter, priceParameter);
        }
    
        public virtual int InsertMaterial_card(Nullable<int> numproduct, Nullable<int> nummaterial, Nullable<int> quantity)
        {
            var numproductParameter = numproduct.HasValue ?
                new ObjectParameter("Numproduct", numproduct) :
                new ObjectParameter("Numproduct", typeof(int));
    
            var nummaterialParameter = nummaterial.HasValue ?
                new ObjectParameter("Nummaterial", nummaterial) :
                new ObjectParameter("Nummaterial", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMaterial_card", numproductParameter, nummaterialParameter, quantityParameter);
        }
    
        public virtual int Quantity_proc(Nullable<int> num_product)
        {
            var num_productParameter = num_product.HasValue ?
                new ObjectParameter("num_product", num_product) :
                new ObjectParameter("num_product", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Quantity_proc", num_productParameter);
        }
    
        public virtual ObjectResult<Quantity_proc1_Result> Quantity_proc1(Nullable<int> num_product)
        {
            var num_productParameter = num_product.HasValue ?
                new ObjectParameter("num_product", num_product) :
                new ObjectParameter("num_product", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Quantity_proc1_Result>("Quantity_proc1", num_productParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateMaterial(Nullable<int> numMaterial, string nameMaterial, Nullable<int> numUnit, Nullable<int> price)
        {
            var numMaterialParameter = numMaterial.HasValue ?
                new ObjectParameter("NumMaterial", numMaterial) :
                new ObjectParameter("NumMaterial", typeof(int));
    
            var nameMaterialParameter = nameMaterial != null ?
                new ObjectParameter("NameMaterial", nameMaterial) :
                new ObjectParameter("NameMaterial", typeof(string));
    
            var numUnitParameter = numUnit.HasValue ?
                new ObjectParameter("NumUnit", numUnit) :
                new ObjectParameter("NumUnit", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMaterial", numMaterialParameter, nameMaterialParameter, numUnitParameter, priceParameter);
        }
    
        public virtual int UpdateMaterial_card(Nullable<int> numMaterial, Nullable<int> numproduct, Nullable<int> numcard, Nullable<int> quantity)
        {
            var numMaterialParameter = numMaterial.HasValue ?
                new ObjectParameter("NumMaterial", numMaterial) :
                new ObjectParameter("NumMaterial", typeof(int));
    
            var numproductParameter = numproduct.HasValue ?
                new ObjectParameter("Numproduct", numproduct) :
                new ObjectParameter("Numproduct", typeof(int));
    
            var numcardParameter = numcard.HasValue ?
                new ObjectParameter("Numcard", numcard) :
                new ObjectParameter("Numcard", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMaterial_card", numMaterialParameter, numproductParameter, numcardParameter, quantityParameter);
        }
    }
}
